#!/usr/bin/env bash


## Note, this script will set up local files, rather than 
## distribution or package files as these are considered
## specific to the system, and the setup script just aides
## in their quick creation.   This is why dbus configs
## are in /etc, and we call systemctl edit rather than
## modify the service files directly.

# set directories for scripts.
INI_FILES=${INI:-"/etc/systemjack"}
SCRIPT_DIR=${SCRIPTS:-"/usr/lib/systemjack"}

# load functions and environment
. "${SCRIPT_DIR}/functions.sh"
. "${INI_FILES}/env.sh"

# and, go!

if [ `whoami` != "root" ]; then
	die "must be root to setup"
fi

uninstall() {

	if [ "$force" == "0" ]; then
		read -p "Remove all systemd and dbus configurations for systemjack? [y/N] " -n 1 -r
		[[ ! $REPLY =~ [Yy] ]] && die "not continuing."
	fi
	echo

	for service in ${SYSTEMJACK_SERVICES[@]}; do
		systemctl revert $service || die "couldn't revert service '${service}'"
	done
	rm /etc/dbus-1/system.d/systemjack-dbus.conf || die "couldn't remove dbus file"

	echo "systemjack local configuration purged."
	exit 0

}

systemjack_help() {
	cat <<EndHELP
systemjack-setup: configure systemjack for use.

	-u: do uninstall
	-h: this help
	-f: force, don't ask

Without arguments, systemjack reads the main.ini file and sets
up systemjack services to run as the specified user, and allows
access to the sound card at the system level.
EndHELP

}

force=0
do_uninstall=0

while getopts "uhf" option; do
	case $option in
		u)
			do_uninstall=1
			;;
		h)
			systemjack_help
			exit 0
			;;
		f)
			force=1
			;;
	esac
done

[[ "$do_uninstall" == "1" ]] && uninstall

# doing setup start here.

eval `$READINI -i "${INI_FILES}/main.ini" setup:user=user setup:group=group email:do=email_do`

if is_false $user ; then
	die "user is not set in main.ini"
fi

if is_false $group ; then
	die "group is not set in main.ini"
fi

if [ "$force" == "0" ]; then
	cat <<EndPreamble
Configuring systemjack services for user '${user}' and group '${group}'.

This setup script will make modifications to dbus and set overrides
on already-installed systemd services related to systemjack operation.
Make sure you have configured *at* *least* /etc/systemjack/main.ini
before you continue.

EndPreamble

	if is_true $email_do ; then
		echo "Additionally, this script will configure emails on failure."
		echo
	fi

	read -p "Does this sound good to you? [y/N] " -n 1 -r
	echo
	[[ ! $REPLY =~ [Yy] ]] && die "not continuing."

fi

echo "Step 1: Allow '${user}' to access sound hardware."
echo

mkdir -p /etc/dbus-1/system.d
sed "s/{USER}/${user}/g" /usr/share/systemjack/templates/systemjack-dbus.conf > /etc/dbus-1/system.d/systemjack-dbus.conf
if [ $? -ne 0 ]; then
	die "could not configure dbus stuff."
fi

echo "Step 2: Set user, group, custom priority, and failure for each service."
echo

export EDITOR=tee
for service in ${SYSTEMJACK_SERVICES[@]}; do

	# clear output
	output=""

	# get the nice name of the service for priority purposes.
	[[ $service =~ ^([^@ ]+)@?\.service$ ]]
	if [ "${BASH_REMATCH[1]}" == "" ]; then
		die "couldn't get a nice name out of '$service' service."
	fi
	nicename=${BASH_REMATCH[1]}

	# add email, if necessary
	if is_true $email_do ; then
		output+=$(printf "[Unit]\nOnFailure=systemjack-email@%%n.service")
		output+=$'\n\n'
	fi


	# add user and group output, reqd.
	output+=$(printf "[Service]\nUser=%s\nGroup=%s\n" "${user}" "${group}")
	output+=$'\n'


	# if non-default priority, add it here.
	eval `$READINI -i "${INI_FILES}/main.ini" priority:${nicename}=pri`;
	if ! is_false $pri ; then
		output+=$(printf "CPUSchedulingPriority=%d\n" "${pri}")
		output+=$'\n'
	fi

	# now, do
	printf "(editing service '%s')\n" "${service}"
	echo "$output" | systemctl edit "${service}"
	

	
done
unset EDITOR

cat <<EndMESSAGE
There is no step 3.  You're set up now, but there might be more
configuration to do.

If you are running with a GUI, You'll need to execute 'systemjack-guiready'
once your graphical environment is ready to go, otherwise apps won't start.
You'll also want to make sure DISPLAY is properly set in the ENV file
at '/etc/systemjack/env.sh'.  This is true if you're using X11 or
Wayland.  Sorry.

You'll now want to enable at least systemjack-init and jackd, and then
reboot to make sure your changes are good.

EndMESSAGE

